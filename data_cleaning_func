#r functions for data cleaning
##############################################################
##############################################################
# Investigate New Dataset
open_sesame <- function(data){
  print('----------------------Variables---------------------')
  print(names(data))
  print('----------------------Structure---------------------')
  str(data)
  print('------------------------Head------------------------')
  print(head(data))
  print('-----------------------Summary----------------------')
  print(summary(data))
  print('-------------Standard Deviation-----------------')
  num <- sapply(data, class) %in% c('integer','numeric')
  print(sapply(data[num], sd))
  # ----------------------Missingness------------------------
  print('----------------------Total NAs---------------------')
  total_na <- sum(is.na(data))
  if (total_na > 0){
    print(paste0(total_na, ' or ', round(total_na/nrow(data)/ncol(data)*100,2),
                 '% of the total data'))
  } else {
    print('No missing values')
  }
  print('-------Columns with NAs and relative rate %--------')
  if (total_na > 0){
    colMiss.rate = colSums(is.na(data))/nrow(data)*100
    print(round(colMiss.rate[colMiss.rate > 0],3))
    # print(names(data)[colSums(is.na(data)) > 0])
  } else {
    print('No missing values')
  }
  # ---------------Plot pairwise variables-------------------
  #plot(data)
}
##############################################################
##############################################################
#display missingness for each column
propmiss <- function(dataframe) {
  m <- sapply(dataframe, function(x) {
    data.frame(
      nmiss=sum(is.na(x)), 
      n=length(x), 
      propmiss=sum(is.na(x))/length(x)
    )
  })
  d <- data.frame(t(m))
  d <- sapply(d, unlist)
  d <- as.data.frame(d)
  d$variable <- row.names(d)
  row.names(d) <- NULL
  d <- cbind(d[ncol(d)],d[-ncol(d)])
  return(d[order(d$propmiss), ])
}
